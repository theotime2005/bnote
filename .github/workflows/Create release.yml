name: Create release

on:
  push:
    tags:
      - '*'

jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install QEMU for ARM
        run: |
          sudo apt-get update && sudo apt-get install -y qemu qemu-user-static binfmt-support
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Setup Python and Zip in ARM environment, Generate build, and Create release
        run: |
          docker run --platform linux/arm/v7 -v $PWD:/workspace -w /workspace python:3.11-slim-buster \
            bash -c "
              # Install zip and set up Python environment
              apt-get update && apt-get install -y zip && \
              python3 -m venv venv && venv/bin/pip install --no-index --find-links whl bnote-3.1.0-py3-none-any.whl && \
          
              # Run the generate script
              sh generate.sh
            "

      - name: Determine release type
        run: |
          if [[ "${GITHUB_REF##*/}" == *"beta"* || "${GITHUB_REF##*/}" == *"alpha"* || "${GITHUB_REF##*/}" == *"rc"* || "${GITHUB_REF##*/}" == *"a"* || "${GITHUB_REF##*/}" == *"b"* || "${GITHUB_REF##*/}" == *"r"* ]]; then
            echo "prerelease=true" >> $GITHUB_ENV
          else
            echo "prerelease=false" >> $GITHUB_ENV
          fi
          ref_name="${GITHUB_REF_NAME:1}"
          echo "file_tag=$ref_name" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ env.prerelease }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bnote-${{env.file_tag}}-py3-none-any.whl.zip
          asset_name: bnote-installer-${{env.file_tag}}.whl.zip
          asset_content_type: application/zip
